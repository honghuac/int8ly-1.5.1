---
- name: Create {{ mobile_security_service_namespace }} namespace
  include_role:
    name: namespace
  vars:
    name: "{{ mobile_security_service_namespace }}"
    display_name: "{{ mobile_security_service_display_name }}"

- name: Add labels to namespace
  shell: oc patch ns {{ mobile_security_service_namespace }} --patch '{"metadata":{"labels":{"{{ monitoring_label_name }}":"{{ monitoring_label_value }}", "integreatly-middleware-service":"true"}}}'
  register: namespace_patch
  failed_when: namespace_patch.stderr != '' and 'not patched' not in namespace_patch.stderr
  changed_when: namespace_patch.rc == 0

- name: Create Mobile Security Service Operator Resources
  shell: "oc create -f {{ item }} -n {{ mobile_security_service_namespace }}"
  with_items: "{{ mobile_security_service_operator_resource_items }}"
  register: mobile_security_service_operator_resource_cmd
  failed_when: mobile_security_service_operator_resource_cmd.stderr != '' and 'AlreadyExists' not in mobile_security_service_operator_resource_cmd.stderr

- name: Copy cluster role binding template
  template:
    src: cluster_role_binding.yml.j2
    dest: /tmp/mss_cluster_role_binding.yml

- name: Create cluster role binding
  shell: "oc create -f /tmp/mss_cluster_role_binding.yml -n {{ mobile_security_service_namespace }}"
  register: mss_role_binding_cmd
  failed_when: mss_role_binding_cmd.stderr != '' and 'AlreadyExists' not in mss_role_binding_cmd.stderr

- name: Delete cluster role binding template
  file: 
    path: /tmp/mss_cluster_role_binding.yml 
    state: absent

- name: Generate Mobile Security Service operator template
  template:
    src: "operator.yml.j2"
    dest: /tmp/mobile-security-service-operator.yml

- name: Create Mobile Security Service Operator
  shell: "oc create -f /tmp/mobile-security-service-operator.yml -n {{ mobile_security_service_namespace }}"
  register: mobile_security_service_operator_cmd
  failed_when: mobile_security_service_operator_cmd.stderr != '' and 'AlreadyExists' not in mobile_security_service_operator_cmd.stderr

- name: "Wait for Operator pod to be ready"
  shell: "oc get pods --namespace={{ mobile_security_service_namespace }} --selector=name=mobile-security-service-operator -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}' | wc -w"
  register: mobile_security_service_operator_result
  until: mobile_security_service_operator_result.stdout.find("1") != -1
  retries: 50
  delay: 10

- name: "Delete operator Template File"
  file: path=/tmp/mobile-security-service-operator.yml state=absent

- name: Create Mobile Security Service DB custom resource
  shell: oc create -f {{ mobile_security_service_operator_resources }}/crds/mobile-security-service_v1alpha1_mobilesecurityservicedb_cr.yaml -n {{ mobile_security_service_namespace }}
  register: create_mobile_security_service_db_custom_resource_cmd
  failed_when: create_mobile_security_service_db_custom_resource_cmd.stderr != '' and 'AlreadyExists' not in create_mobile_security_service_db_custom_resource_cmd.stderr
  changed_when: create_mobile_security_service_db_custom_resource_cmd.rc == 0

- name: "Wait for Mobile Security Service DB pods to be ready"
  shell: "oc get pods --namespace={{ mobile_security_service_namespace }} --selector=name=mobilesecurityservicedb -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}' | wc -w"
  register: mobile_security_service_db_result
  until: mobile_security_service_db_result.stdout.find("1") != -1
  retries: 50
  delay: 10

- name: Create Mobile Security Service custom resource
  shell: oc create -f {{ mobile_security_service_operator_resources }}/crds/mobile-security-service_v1alpha1_mobilesecurityservice_cr.yaml -n {{ mobile_security_service_namespace }}
  register: create_mobile_security_service_custom_resource_cmd
  failed_when: create_mobile_security_service_custom_resource_cmd.stderr != '' and 'AlreadyExists' not in create_mobile_security_service_custom_resource_cmd.stderr
  changed_when: create_mobile_security_service_custom_resource_cmd.rc == 0

- name: "Wait for Mobile Security Service pods to be ready"
  shell: "oc get pods --namespace={{ mobile_security_service_namespace }} --selector=name=mobilesecurityservice -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}' | wc -w"
  register: mobile_security_service_result
  until: mobile_security_service_result.stdout.find("2") != -1
  retries: 50
  delay: 10

